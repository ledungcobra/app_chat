/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

import client.context.CApplicationContext;
import client.core.ResponseHandler;
import common.dto.Command;
import common.dto.CommandObject;
import lombok.EqualsAndHashCode;
import lombok.SneakyThrows;
import lombok.val;
import server.entities.User;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;

import static client.context.CApplicationContext.tcpClient;

/**
 * @author ledun
 */
@EqualsAndHashCode(callSuper = false, onlyExplicitlyIncluded = true)
public class LoginScreen extends AbstractScreen implements ResponseHandler
{

    @EqualsAndHashCode.Include
    private int id = 0;


    public LoginScreen() throws HeadlessException
    {
        tcpClient.addListener(this);
    }

    @Override
    public void onCreateView()
    {
        initComponents();
        ImageIcon icon = new ImageIcon("loading.gif");
        this.loadingLbl.setIcon(icon);
//        this.loadingLbl.setText("loading ....");
        this.loadingLbl.setVisible(false);
    }

    @Override
    public void addEventListener()
    {
        this.loginBtn.addActionListener(this::loginBtnActionPerformed);
        this.registerBtn.addActionListener(this::registerActionPerformed);
    }

    private void registerActionPerformed(ActionEvent actionEvent)
    {
        registerAsync();
    }

    @SneakyThrows
    private void loginBtnActionPerformed(ActionEvent e)
    {
        loginAsync();
    }

    public void registerAsync()
    {
        CApplicationContext.service.submit(() -> {
            try
            {
                User user = new User();
                user.setUserName(userNameTextField.getText());
                user.setPassword(new String(passwordTextField.getPassword()));

                tcpClient.sendRequestAsync(new CommandObject(Command.C2S_REGISTER, user));
            } catch (Exception e)
            {
                runOnUiThread(() -> {
                    JOptionPane.showMessageDialog(LoginScreen.this, e.getMessage());
                });
                e.printStackTrace();
            }
        });

    }

    public void loginAsync()
    {
        CApplicationContext.service.submit(() -> {
            try
            {
                User user = new User();
                user.setUserName(userNameTextField.getText());
                user.setPassword(new String(passwordTextField.getPassword()));

                val success = tcpClient.sendRequest(new CommandObject(Command.C2S_LOGIN, user));
                if (!success)
                {
                    throw new Exception("Cannot login fail because the server is offline");
                }
            } catch (Exception e)
            {
                runOnUiThread(() -> {
                    JOptionPane.showMessageDialog(LoginScreen.this, e.getMessage());
                });
                e.printStackTrace();
            }
        });

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        registerBtn = new javax.swing.JButton();
        loadingLbl = new javax.swing.JLabel();
        displayNameTextField = new javax.swing.JTextField();
        displayNameLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Quick Chat");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        loginBtn.setText("Login");

        jCheckBox1.setText("Remember me");

        registerBtn.setText("Register");

        displayNameLbl.setText("Display name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(displayNameLbl))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 485, Short.MAX_VALUE)
                                .addComponent(loadingLbl)
                                .addGap(198, 198, 198))
                            .addComponent(passwordTextField)
                            .addComponent(userNameTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(displayNameTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(registerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registerBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayNameLbl))
                        .addGap(96, 96, 96)
                        .addComponent(loadingLbl)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel displayNameLbl;
    private javax.swing.JTextField displayNameTextField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel loadingLbl;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton registerBtn;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables
}
